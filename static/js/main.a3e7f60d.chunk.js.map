{"version":3,"sources":["const.tsx","components/loading-screen/loading-screen.tsx","components/logo/logo.tsx","types/action.ts","store/action.ts","services/api.tsx","services/token.tsx","services/adapter.ts","store/api-actions.ts","store/root-reducer.ts","store/films-data/films-data.ts","store/catalog-process/catalog-process.ts","store/user-process/user-process.ts","store/user-process/selectors.ts","components/user-block/user-block.tsx","store/catalog-process/selectors.ts","store/films-data/selectors.ts","components/genre-list/genre-list.tsx","components/video-player/video-player.tsx","components/film-card/film-card.tsx","components/film-list/film-list.tsx","components/show-more/show-more.tsx","components/footer/footer.tsx","components/player-button/player-button.tsx","components/my-list-button/my-list-button.tsx","components/welcome-screen/welcome-screen.tsx","components/sign-in/sign-in.tsx","components/my-list/my-list.tsx","util.tsx","components/review/review.tsx","components/tabs/tabs.tsx","components/add-review-button/add-review-button.tsx","components/movie-page/movie-page.tsx","components/review-form/review-form.tsx","components/add-review/add-review.tsx","components/player/player.tsx","components/page-404/page-404.tsx","components/private-route/private-route.tsx","browser-history.tsx","components/login-route/login-route.tsx","components/app/app.tsx","store/middlewares/redirect.tsx","index.tsx"],"names":["AppRoute","AuthorizationStatus","APIRoute","TabType","initialFilm","id","name","posterImage","previewImage","backgroundImage","backgroundColor","description","rating","scoresCount","director","starring","runTime","genre","released","isFavorite","videoLink","previewVideoLink","initialUser","email","avatarUrl","token","ALL_GENRES","RatingLevelGrades","RatingLevel","ACTIVE_TAB_CLASS_NAME","monthNames","LoadingScreen","Logo","extraClassNameProp","className","to","Root","React","ActionType","memo","HttpCode","loadPromoFilm","createAction","LoadPromoFilm","film","payload","loadFilms","LoadFilms","films","loadFilm","LoadFilm","loadSimilarFilms","LoadSimilarFilms","loadComments","LoadComments","comments","changeGenre","ChangeGenre","changeLimitCounter","ChangeLimitCounter","changeFilmNumberLimit","ChangeFilmNumberLimit","resetFilmNumberLimit","ResetFilmNumberLimit","requireAuthorization","RequireAuthorization","authStatus","requireLogout","RequireLogout","changeUser","ChangeUser","user","redirectToRoute","RedirectToRoute","url","loadFavoriteFilms","LoadFavoriteFilms","favoriteFilms","resetFavoriteFilms","ResetFavoriteFilms","AUTH_TOKEN_KEY_NAME","adaptToClientFilm","adaptedFilm","Object","assign","poster_image","preview_image","background_image","background_color","video_link","preview_video_link","scores_count","run_time","is_favorite","adaptToClientUser","adaptedUser","avatar_url","NameSpace","fetchFilmInfoAction","filmId","dispatch","_getState","api","a","get","Films","then","status","adaptedData","data","catch","Page404","initialState","promoFilm","currentFilm","similarFilms","filmsData","createReducer","builder","addCase","state","action","currentGenre","limitCounter","filmNumberLimit","catalogProcess","authorizationStatus","Unknown","isDataLoaded","userProcess","NoAuth","rootReducer","combineReducers","catalog","getAuthorizationStatus","getDataLoadedStatus","getUser","getFavoriteFilms","UserBlock","useSelector","useDispatch","onLogout","delete","Logout","localStorage","removeItem","MyList","src","alt","width","height","Auth","onClick","Login","getCurrentGenre","getFilmNumberLimit","getFilms","getPromoFilm","getCurrentFilm","getSimilarFilms","getComments","GenreList","nonUniqueGenreList","map","uniqueGenreList","Set","fullGenreList","evt","onChangeGenre","currentTarget","innerText","VideoPlayer","props","link","poster","autoplay","muted","useState","isLoading","setIsLoading","videoRef","useRef","useEffect","current","onloadeddata","ref","autoPlay","FilmCard","activeRef","isPreviewVideo","setIsPreviewVideo","history","useHistory","onMouseEnter","setTimeout","onMouseLeave","push","Film","style","cursor","FilmList","filmsCount","length","cards","slice","card","keyValue","ShowMore","type","Footer","PlayerButton","Player","viewBox","xlinkHref","MyListButton","favorite","post","Favorite","Unauthorized","store","getState","DATA","WelcomeScreen","filmsByGenre","filter","getFilmsByGenre","matchedPromoFilm","find","String","SignIn","onSubmit","authData","login","password","setItem","loginAction","loginRef","passwordRef","preventDefault","value","placeholder","htmlFor","formatDate","dateISO","date","Date","day","getDate","month","getMonth","getFullYear","humanizeDate","Review","author","dateTime","dateText","quote","defaultValue","Tabs","tab","getRatingLevel","filmRating","Bad","Normal","Good","VeryGood","Awesome","humanizeRunTime","filmDuration","hours","Math","trunc","minutes","Overview","Details","Reviews","tabName","join","whiteSpace","review","comment","getActiveTabContent","AddReviewButton","useParams","AddReview","MoviePage","activeTab","setActiveTab","handleTabClick","useCallback","Number","Similar","Comments","fetchCommentsAction","grades","ReviewForm","userGrades","setUserGrades","userComment","setUserComment","errorMessage","setErrorMessage","isSending","setIsSending","reviewData","errorHandler","reviewAction","error","color","border","padding","disabled","grade","onChange","reverse","background","target","titlePoster","filmPage","isPlaying","setIsPlaying","progress","setProgress","timeProgress","setTimeProgress","onloadstart","oncanplay","format","duration","play","pause","onTimeUpdate","event","isNaN","currentTime","goBack","max","left","requestFullscreen","PrivateRoute","exact","path","render","routeProps","browserHistory","createBrowserHistory","LoginRoute","App","redirect","_store","next","onUnauthorized","axios","create","baseURL","timeout","interceptors","response","use","Promise","reject","request","config","getItem","getToken","headers","createAPI","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","PromoFilm","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3e7f60d.chunk.js","sourcesContent":["export enum AppRoute {\n  Root = '/',\n  Login = '/login',\n  MyList = '/mylist',\n  AddReview = '/review',\n  Film = '/films/',\n  Player = '/player/',\n  Page404 = '/page-not-found',\n}\n\nexport enum AuthorizationStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\nexport enum APIRoute {\n  PromoFilm = '/promo',\n  Films = '/films',\n  Login = '/login',\n  Logout = '/logout',\n  Similar = '/similar',\n  Comments = '/comments',\n  Favorite = '/favorite',\n}\n\nexport const initialFilm = {\n  id: 0,\n  name:\t'',\n  posterImage:\t'',\n  previewImage:\t'',\n  backgroundImage:\t'',\n  backgroundColor:\t'',\n  description: '',\n  rating:\t0,\n  scoresCount:\t0,\n  director:\t'',\n  starring: [],\n  runTime:\t0,\n  genre:\t'',\n  released:\t0,\n  isFavorite:\tfalse,\n  videoLink:\t'',\n  previewVideoLink:\t'',\n};\n\nexport const initialUser = {\n  id: 0,\n  email: '',\n  name: '',\n  avatarUrl: '',\n  token: '',\n};\n\nexport const ALL_GENRES = 'All genres';\n\nexport const ACTIVE_GENRE_CLASS_NAME = 'catalog__genres-item--active';\n\nexport const LIMIT_COUNTER_START = 1;\n\nexport const FILMS_NUMBER_STEP = 8;\n\nexport const SIMILAR_FILM_NUMBER = 4;\n\nexport enum TabType {\n  Overview = 'Overview',\n  Details = 'Details',\n  Reviews = 'Reviews',\n}\n\nexport const ACTIVE_TAB_CLASS_NAME = 'film-nav__item--active';\n\nexport enum RatingLevelGrades {\n  Bad = 0,\n  Normal = 3,\n  Good = 5,\n  VeryGood = 8,\n  Awesome = 10,\n}\n\nexport enum RatingLevel {\n  Bad = 'Bad',\n  Normal = 'Normal',\n  Good = 'Good',\n  VeryGood = 'Very good',\n  Awesome = 'Awesome',\n}\n\nexport const monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const BACKGROUND_REVIEW_FORM = 'rgba(255, 255, 255, 0.4)';\n","function LoadingScreen(): JSX.Element {\n  return (\n    <p>Loading ...</p>\n  );\n}\n\nexport default LoadingScreen;\n","import {Link} from 'react-router-dom';\nimport {AppRoute} from '../../const';\nimport React from 'react';\n\ntype LogoProps = {\n  extraClassNameProp? : string;\n}\n\nfunction Logo({extraClassNameProp = ''} : LogoProps): JSX.Element {\n  return (\n    <Link className={`logo__link ${extraClassNameProp}`} to={AppRoute.Root}>\n      <span className=\"logo__letter logo__letter--1\">W</span>\n      <span className=\"logo__letter logo__letter--2\">T</span>\n      <span className=\"logo__letter logo__letter--3\">W</span>\n    </Link>\n  );\n}\n\nexport default React.memo(Logo);\n","import {Action} from 'redux';\nimport {\n  ThunkAction,\n  ThunkDispatch\n} from 'redux-thunk';\nimport {\n  AxiosInstance\n} from 'axios';\nimport {State} from '../types/state';\n\nexport enum ActionType {\n  LoadPromoFilm = 'data/loadPromoFilm',\n  LoadFilms = 'data/loadFilms',\n  LoadFilm = 'data/loadFilm',\n  LoadSimilarFilms = 'data/loadSimilarFilms',\n  LoadComments = 'data/loadComments',\n  ChangeGenre = 'filmList/changeGenre',\n  ChangeLimitCounter = 'filmList/changeLimitCounter',\n  ChangeFilmNumberLimit = 'filmList/changeFilmNumberLimit',\n  ResetFilmNumberLimit = 'filmList/resetFilmNumberLimit',\n  RequireAuthorization = 'user/requireAuthorization',\n  RequireLogout = 'user/requireLogout',\n  ChangeUser = 'user/user',\n  RedirectToRoute = 'filmList/redirectToRoute',\n  LoadFavoriteFilms = 'user/loadFavoriteFilms',\n  ResetFavoriteFilms = 'user/resetFavoriteFilms',\n}\n\nexport type ThunkActionResult<R = Promise<void>> = ThunkAction<R, State, AxiosInstance, Action>;\n\nexport type ThunkAppDispatch = ThunkDispatch<State, AxiosInstance, Action>;\n","import {ActionType} from '../types/action';\nimport {AppRoute, AuthorizationStatus} from '../const';\nimport {Film} from '../types/film';\nimport {User} from '../types/user';\nimport {FilmReview} from '../types/film-review';\nimport {createAction} from '@reduxjs/toolkit';\n\nexport const loadPromoFilm = createAction(\n  ActionType.LoadPromoFilm,\n  (film: Film) => ({\n    payload: film,\n  }),\n);\n\nexport const loadFilms = createAction(\n  ActionType.LoadFilms,\n  (films: Film[]) => ({\n    payload: films,\n  }),\n);\n\nexport const loadFilm = createAction(\n  ActionType.LoadFilm,\n  (film: Film) => ({\n    payload: film,\n  }),\n);\n\nexport const loadSimilarFilms = createAction(\n  ActionType.LoadSimilarFilms,\n  (films: Film[]) => ({\n    payload: films,\n  }),\n);\n\nexport const loadComments = createAction(\n  ActionType.LoadComments,\n  (comments: FilmReview[]) => ({\n    payload: comments,\n  }),\n);\n\nexport const changeGenre = createAction(\n  ActionType.ChangeGenre,\n  (genre: string) => ({\n    payload: genre,\n  }),\n);\n\nexport const changeLimitCounter = createAction(ActionType.ChangeLimitCounter);\n\nexport const changeFilmNumberLimit = createAction(ActionType.ChangeFilmNumberLimit);\n\nexport const resetFilmNumberLimit = createAction(ActionType.ResetFilmNumberLimit);\n\nexport const requireAuthorization = createAction(\n  ActionType.RequireAuthorization,\n  (authStatus: AuthorizationStatus) => ({\n    payload: authStatus,\n  }),\n);\n\nexport const requireLogout = createAction(ActionType.RequireLogout);\n\nexport const changeUser = createAction(\n  ActionType.ChangeUser,\n  (user: User) => ({\n    payload: user,\n  }),\n);\n\nexport const redirectToRoute = createAction(\n  ActionType.RedirectToRoute,\n  (url: AppRoute | string) => ({\n    payload: url,\n  }),\n);\n\nexport const loadFavoriteFilms = createAction(\n  ActionType.LoadFavoriteFilms,\n  (favoriteFilms: Film[]) => ({\n    payload: favoriteFilms,\n  }),\n);\n\nexport const resetFavoriteFilms = createAction(ActionType.ResetFavoriteFilms);\n","import axios, {AxiosInstance, AxiosRequestConfig, AxiosResponse, AxiosError} from 'axios';\nimport {getToken} from './token';\n\nconst BACKEND_URL = 'https://8.react.pages.academy/wtw';\nconst REQUEST_TIMEOUT = 5000;\n\nexport enum HttpCode {\n  Unauthorized = 401,\n}\n\ntype UnauthorizedCallback = () => void;\n\nexport const createAPI = (onUnauthorized: UnauthorizedCallback): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n\n    (error: AxiosError) => {\n      const {response} = error;\n\n      if (response?.status === HttpCode.Unauthorized) {\n        return onUnauthorized();\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n\n      if (token) {\n        config.headers['X-Token'] = token;\n      }\n\n      return config;\n    },\n  );\n\n  return api;\n};\n","const AUTH_TOKEN_KEY_NAME = 'what-to-watch-token';\n\nexport type Token = string;\n\nexport const getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n  return token ?? '';\n};\n\nexport const saveToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nexport const dropToken = (): void => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n","import {Film, FilmFromServer} from '../types/film';\nimport {User, UserFromServer} from '../types/user';\n\nexport function adaptToClientFilm(film: FilmFromServer): Film {\n  const adaptedFilm = Object.assign(\n    {},\n    film,\n    {\n      posterImage: film.poster_image,\n      previewImage: film.preview_image,\n      backgroundImage: film.background_image,\n      backgroundColor: film.background_color,\n      videoLink: film.video_link,\n      previewVideoLink: film.preview_video_link,\n      scoresCount: film.scores_count,\n      runTime: film.run_time,\n      isFavorite: film.is_favorite,\n    },\n  );\n\n  delete adaptedFilm.poster_image;\n  delete adaptedFilm.preview_image;\n  delete adaptedFilm.background_color;\n  delete adaptedFilm.background_image;\n  delete adaptedFilm.video_link;\n  delete adaptedFilm.preview_video_link;\n  delete adaptedFilm.scores_count;\n  delete adaptedFilm.run_time;\n  delete adaptedFilm.is_favorite;\n\n  return adaptedFilm as Film;\n}\n\nexport function adaptToClientUser(user: UserFromServer): User {\n  const adaptedUser = Object.assign(\n    {},\n    user,\n    {\n      avatarUrl: user.avatar_url,\n    },\n  );\n\n  delete adaptedUser.avatar_url;\n\n  return adaptedUser as User;\n}\n","import {ThunkActionResult} from '../types/action';\nimport {\n  changeUser,\n  loadFilms,\n  loadPromoFilm,\n  loadFilm,\n  requireAuthorization,\n  requireLogout,\n  redirectToRoute,\n  loadSimilarFilms,\n  loadComments,\n  loadFavoriteFilms,\n  resetFavoriteFilms\n} from './action';\nimport {dropToken, saveToken} from '../services/token';\nimport {\n  APIRoute,\n  AuthorizationStatus,\n  AppRoute,\n  initialUser} from '../const';\nimport {FavoriteFilm, Film} from '../types/film';\nimport {AuthData} from '../types/auth-data';\nimport {HttpCode} from '../services/api';\nimport {UserFromServer} from '../types/user';\nimport {adaptToClientFilm, adaptToClientUser} from '../services/adapter';\nimport {FilmReview} from '../types/film-review';\nimport {ReviewData} from '../types/review-data';\nimport {store} from '../index';\n\nexport const fetchPromoFilmAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film>(APIRoute.PromoFilm);\n    const adaptedData = adaptToClientFilm(data);\n    dispatch(loadPromoFilm(adaptedData));\n  };\n\nexport const fetchFilmInfoAction = (filmId: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    await api.get<Film>(`${APIRoute.Films}/${filmId}`)\n      .then(({status, data}) => {\n        const adaptedData = adaptToClientFilm(data);\n        dispatch(loadFilm(adaptedData));\n      }).catch(() => {\n        dispatch(redirectToRoute(AppRoute.Page404));\n      });\n  };\n\nexport const fetchFilmAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film[]>(APIRoute.Films);\n    const adaptedData = data.map((film) => adaptToClientFilm(film));\n    dispatch(loadFilms(adaptedData));\n  };\n\nexport const fetchSimilarFilmsAction = (filmId: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film[]>(`${APIRoute.Films}/${filmId}${APIRoute.Similar}`);\n    const adaptedData = data.map((film) => adaptToClientFilm(film));\n    dispatch(loadSimilarFilms(adaptedData));\n  };\n\nexport const fetchCommentsAction = (filmId: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<FilmReview[]>(`${APIRoute.Comments}/${filmId}`);\n    dispatch(loadComments(data));\n  };\n\nexport const fetchFavoriteFilms = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<Film[]>(APIRoute.Favorite);\n    const adaptedData = data.map((film) => adaptToClientFilm(film));\n    dispatch(loadFavoriteFilms(adaptedData));\n  };\n\nexport const checkAuthAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    await api.get(APIRoute.Login)\n      .then(({status, data}) => {\n        if (status && status !== HttpCode.Unauthorized) {\n          dispatch(requireAuthorization(AuthorizationStatus.Auth));\n          dispatch(changeUser(adaptToClientUser(data)));\n          return;\n        }\n        dispatch(requireAuthorization(AuthorizationStatus.NoAuth));\n      });\n  };\n\nexport const loginAction = ({login: email, password}: AuthData): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    const {data} = await api.post<UserFromServer>(APIRoute.Login, {email, password});\n    saveToken(data.token);\n    dispatch(changeUser(adaptToClientUser(data)));\n    dispatch(requireAuthorization(AuthorizationStatus.Auth));\n    dispatch(redirectToRoute(AppRoute.MyList));\n  };\n\n\nexport const logoutAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    api.delete(APIRoute.Logout);\n    dropToken();\n    dispatch(requireLogout());\n    dispatch(changeUser(initialUser));\n    dispatch(resetFavoriteFilms());\n  };\n\nexport const reviewAction = ({filmId, rating, comment}: ReviewData, errorHandler: (error: string) => void): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    await api.post(`${APIRoute.Comments}/${filmId}`, {rating, comment})\n      .then(({status, data}) => {\n        if (status >= 400 ) {\n          errorHandler('Error sending review. Try again later.');\n        }\n        dispatch(loadComments(data));\n        dispatch(redirectToRoute(`${AppRoute.Film}${String(filmId)}`));\n      })\n      .catch(() => {\n        errorHandler('Error sending review. Try again later.');\n      });\n  };\n\nexport const favoriteAction = (favorite: FavoriteFilm): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    await api.post(`${APIRoute.Favorite}/${favorite.filmId}/${favorite.status === true ? 1 : 0}`)\n      .then(({status, data}) => {\n        if (status && status !== HttpCode.Unauthorized) {\n          const adaptedData = adaptToClientFilm(data);\n          if (adaptedData.id === store.getState().DATA.promoFilm.id) {\n            dispatch(loadPromoFilm(adaptedData));\n            return;\n          }\n          dispatch(loadFilm(adaptedData));\n          return;\n        }\n        dispatch(redirectToRoute(AppRoute.Login));\n      });\n  };\n","import {combineReducers} from 'redux';\nimport {filmsData} from './films-data/films-data';\nimport {catalogProcess} from './catalog-process/catalog-process';\nimport {userProcess} from './user-process/user-process';\n\nexport enum NameSpace {\n  data = 'DATA',\n  catalog = 'CATALOG',\n  user = 'USER',\n}\n\nexport const rootReducer = combineReducers({\n  [NameSpace.data]: filmsData,\n  [NameSpace.catalog]: catalogProcess,\n  [NameSpace.user]: userProcess,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {FilmsData} from '../../types/state';\nimport {initialFilm} from '../../const';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {\n  loadComments,\n  loadFilm,\n  loadFilms,\n  loadPromoFilm,\n  loadSimilarFilms,\n  resetFavoriteFilms\n} from '../action';\n\nconst initialState: FilmsData = {\n  films: [],\n  promoFilm: initialFilm,\n  currentFilm: initialFilm,\n  similarFilms: [],\n  comments: [],\n};\n\nconst filmsData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadFilms, (state, action) => {\n      const films = action.payload;\n      state.films = films;\n    })\n    .addCase(loadPromoFilm, (state, action) => {\n      const promoFilm = action.payload;\n      state.promoFilm = promoFilm;\n    })\n    .addCase(loadFilm, (state, action) => {\n      const currentFilm = action.payload;\n      state.currentFilm = currentFilm;\n    })\n    .addCase(loadSimilarFilms, (state, action) => {\n      const similarFilms = action.payload;\n      state.similarFilms = similarFilms;\n    })\n    .addCase(loadComments, (state, action) => {\n      const comments = action.payload;\n      state.comments = comments;\n    })\n    .addCase(resetFavoriteFilms, (state, action) => {\n      state.promoFilm.isFavorite = false;\n      state.currentFilm.isFavorite = false;\n    });\n});\n\nexport {filmsData};\n","import {CatalogProcess} from '../../types/state';\nimport {ALL_GENRES, FILMS_NUMBER_STEP, LIMIT_COUNTER_START} from '../../const';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {\n  changeFilmNumberLimit,\n  changeGenre,\n  changeLimitCounter,\n  resetFilmNumberLimit} from '../action';\n\nconst initialState: CatalogProcess = {\n  currentGenre: ALL_GENRES,\n  limitCounter: LIMIT_COUNTER_START,\n  filmNumberLimit: FILMS_NUMBER_STEP,\n};\n\nconst catalogProcess = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeGenre, (state, action) => {\n      const currentGenre = action.payload;\n      state.currentGenre = currentGenre;\n    })\n    .addCase(changeLimitCounter, (state, action) => {\n      state.limitCounter = state.limitCounter + 1;\n    })\n    .addCase(changeFilmNumberLimit, (state, action) => {\n      state.filmNumberLimit = state.filmNumberLimit * state.limitCounter;\n    })\n    .addCase(resetFilmNumberLimit, (state, action) => {\n      state.limitCounter = initialState.limitCounter;\n      state.filmNumberLimit = initialState.filmNumberLimit;\n    });\n});\n\nexport {catalogProcess};\n","import {UserProcess} from '../../types/state';\nimport {AuthorizationStatus, initialUser} from '../../const';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {\n  changeUser,\n  loadFavoriteFilms,\n  requireAuthorization,\n  requireLogout,\n  resetFavoriteFilms\n} from '../action';\n\nconst initialState: UserProcess = {\n  authorizationStatus: AuthorizationStatus.Unknown,\n  user: initialUser,\n  isDataLoaded: false,\n  favoriteFilms: [],\n};\n\nconst userProcess = createReducer(initialState, (builder) => {\n  builder\n    .addCase(requireAuthorization, (state, action) => {\n      const authorizationStatus = action.payload;\n      state.authorizationStatus = authorizationStatus;\n      state.isDataLoaded = true;\n    })\n    .addCase(requireLogout, (state, action) => {\n      state.authorizationStatus = AuthorizationStatus.NoAuth;\n    })\n    .addCase(changeUser, (state, action) => {\n      const user = action.payload;\n      state.user = user;\n    })\n    .addCase(loadFavoriteFilms, (state, action) => {\n      const favoriteFilms = action.payload;\n      state.favoriteFilms = favoriteFilms;\n    })\n    .addCase(resetFavoriteFilms, (state, action) => {\n      state.favoriteFilms = initialState.favoriteFilms;\n    });\n});\n\nexport {userProcess};\n","import {NameSpace} from '../root-reducer';\nimport {State} from '../../types/state';\nimport {User} from '../../types/user';\nimport {AuthorizationStatus} from '../../const';\nimport {Film} from '../../types/film';\n\nexport const getAuthorizationStatus = (state: State): AuthorizationStatus => state[NameSpace.user].authorizationStatus;\nexport const getDataLoadedStatus = (state: State): boolean => state[NameSpace.user].isDataLoaded;\nexport const getUser = (state: State): User => state[NameSpace.user].user;\nexport const getFavoriteFilms = (state: State): Film[] => state[NameSpace.user].favoriteFilms;\n","import {AuthorizationStatus, AppRoute} from '../../const';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {logoutAction} from '../../store/api-actions';\nimport {getAuthorizationStatus, getUser} from '../../store/user-process/selectors';\n\nfunction UserBlock(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const user = useSelector(getUser);\n\n  const dispatch = useDispatch();\n\n  const onLogout = () => {\n    dispatch(logoutAction());\n  };\n\n  return (\n    <ul className=\"user-block\">\n      <li className=\"user-block__item\">\n        <div className=\"user-block__avatar\">\n          <Link to={AppRoute.MyList}>\n            <img\n              src={user.avatarUrl === '' ? 'img/unauthorizedUser.png' : user.avatarUrl}\n              alt=\"User avatar\"\n              width=\"63\"\n              height=\"63\"\n            />\n          </Link>\n        </div>\n      </li>\n      <li className=\"user-block__item\">\n        {(authorizationStatus === AuthorizationStatus.Auth) ?\n          /* eslint-disable-next-line jsx-a11y/anchor-is-valid */\n          <a\n            className=\"user-block__link\"\n            onClick={() => onLogout()}\n          >\n            Sign out\n          </a> :\n          <Link className=\"user-block__link\" to={AppRoute.Login}>Sign in</Link>}\n      </li>\n    </ul>);\n}\n\nexport default UserBlock;\n","import {NameSpace} from '../root-reducer';\nimport {State} from '../../types/state';\n\nexport const getCurrentGenre = (state: State): string => state[NameSpace.catalog].currentGenre;\nexport const getLimitCounter = (state: State): number => state[NameSpace.catalog].limitCounter;\nexport const getFilmNumberLimit = (state: State): number => state[NameSpace.catalog].filmNumberLimit;\n","import {NameSpace} from '../root-reducer';\nimport {State} from '../../types/state';\nimport {Film} from '../../types/film';\nimport {FilmReview} from '../../types/film-review';\n\nexport const getFilms = (state: State): Film[] => state[NameSpace.data].films;\nexport const getPromoFilm = (state: State): Film => state[NameSpace.data].promoFilm;\nexport const getCurrentFilm = (state: State): Film => state[NameSpace.data].currentFilm;\nexport const getSimilarFilms = (state: State): Film[] => state[NameSpace.data].similarFilms;\nexport const getComments = (state: State): FilmReview[] => state[NameSpace.data].comments;\n","import {Link} from 'react-router-dom';\nimport {Film} from '../../types/film';\nimport {ACTIVE_GENRE_CLASS_NAME, ALL_GENRES, AppRoute} from '../../const';\nimport {changeGenre, resetFilmNumberLimit} from '../../store/action';\nimport {useDispatch, useSelector} from 'react-redux';\nimport React from 'react';\nimport {getCurrentGenre} from '../../store/catalog-process/selectors';\nimport {getFilms} from '../../store/films-data/selectors';\n\nfunction GenreList(): JSX.Element {\n  const currentGenre = useSelector(getCurrentGenre);\n  const films = useSelector(getFilms);\n\n  const dispatch = useDispatch();\n\n  const onChangeGenre = (genre: string) => {\n    dispatch(changeGenre(genre));\n    dispatch(resetFilmNumberLimit());\n  };\n\n  const nonUniqueGenreList = films.map((film: Film) => film.genre);\n  const uniqueGenreList = new Set(nonUniqueGenreList);\n  const fullGenreList = [ALL_GENRES, ...uniqueGenreList];\n\n  return (\n    <ul className='catalog__genres-list'>\n      {fullGenreList.map((genre: string) => (\n        <li\n          className={`catalog__genres-item ${genre === currentGenre ? ACTIVE_GENRE_CLASS_NAME : ''}`}\n          key={genre}\n        >\n          <Link to={AppRoute.Root}\n            className='catalog__genres-link'\n            onClick={(evt) => {\n              onChangeGenre(evt.currentTarget.innerText);\n            }}\n          >\n            {genre}\n          </Link>\n        </li>))}\n    </ul>\n  );\n}\n\nexport default GenreList;\n","import {useState, useRef, useEffect} from 'react';\n\ntype VideoPlayerProps = {\n  link: string;\n  poster: string;\n  autoplay: boolean;\n  muted: boolean;\n}\n\nfunction VideoPlayer(props: VideoPlayerProps): JSX.Element {\n  const {link, poster, autoplay, muted} = props;\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n\n  useEffect(() => {\n    if (videoRef.current !== null) {\n      videoRef.current.onloadeddata = () => setIsLoading(!isLoading);\n    }\n\n    return () => {\n      if (videoRef.current !== null) {\n        videoRef.current.onloadeddata = null;\n        videoRef.current = null;\n      }\n    };\n  }, [link, isLoading]);\n\n  return (\n    <video\n      src={link}\n      ref={videoRef}\n      className=\"player__video\"\n      width=\"280\"\n      height=\"175\"\n      autoPlay={autoplay}\n      muted={muted}\n      poster={poster}\n    >\n    </video>\n  );\n}\n\nexport default VideoPlayer;\n","import React, {useRef, useState} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {Film} from '../../types/film';\nimport VideoPlayer from '../video-player/video-player';\nimport {AppRoute} from '../../const';\n\ntype FilmCardProps = {\n  film: Film;\n}\n\nfunction FilmCard({film}: FilmCardProps) : JSX.Element {\n  const activeRef = useRef<boolean>(false);\n  const [isPreviewVideo, setIsPreviewVideo] = useState(false);\n\n  const history = useHistory();\n\n  return (\n    <article\n      className=\"small-film-card catalog__films-card\"\n      onMouseEnter={() => {\n        activeRef.current = true;\n\n        setTimeout(() => {\n          if (activeRef.current) {\n            setIsPreviewVideo(true);\n          }\n        }, 1000);\n      }}\n      onMouseLeave={() => {\n        activeRef.current = false;\n        setIsPreviewVideo(false);\n      }}\n    >\n      <div\n        className=\"small-film-card__image\"\n        onClick={() => history.push(`${AppRoute.Film}${film.id}`)}\n        style={{cursor: 'pointer'}}\n      >\n        {isPreviewVideo ?\n          <VideoPlayer\n            link={film.previewVideoLink}\n            poster={film.posterImage}\n            autoplay\n            muted\n          /> : <img src={film.previewImage} alt={film.name} width=\"280\" height=\"175\"/>}\n      </div>\n      <h3 className=\"small-film-card__title\">\n        <Link className=\"small-film-card__link\" to={`${AppRoute.Film}${film.id}`}>{film.name}</Link>\n      </h3>\n    </article>\n  );\n}\n\nexport default FilmCard;\n","import FilmCard from '../film-card/film-card';\nimport {Film} from '../../types/film';\nimport React from 'react';\n\ntype FilmListProps = {\n  films: Film[];\n  filmsCount: number;\n}\n\nfunction FilmList({filmsCount, films}: FilmListProps) : JSX.Element {\n\n  if (films && films.length > 0) {\n    const cards = films.length <= filmsCount ? films : films.slice(0, filmsCount);\n    return (\n      <div className=\"catalog__films-list\">\n        {cards.map((card) => {\n          const keyValue = `${card.id}`;\n          return (\n            <FilmCard\n              key = {keyValue}\n              film={card}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n  return (\n    <div className=\"catalog__films-list\">\n      <p>There is no data about films</p>\n    </div>\n  );\n}\n\nexport default React.memo(FilmList);\n\n","import {changeFilmNumberLimit, changeLimitCounter} from '../../store/action';\nimport {useDispatch} from 'react-redux';\n\nfunction ShowMore(): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onShowMore = () => {\n    dispatch(changeLimitCounter());\n    dispatch(changeFilmNumberLimit());\n  };\n\n  return (\n    <div className='catalog__more'>\n      <button\n        className='catalog__button'\n        type='button'\n        onClick={() : void => {\n          onShowMore();\n        }}\n      >\n        Show more\n      </button>\n    </div>\n  );\n}\n\nexport default ShowMore;\n","import Logo from '../logo/logo';\nimport React from 'react';\n\nfunction Footer() : JSX.Element {\n  return (\n    <footer className=\"page-footer\">\n      <div className=\"logo\">\n        <Logo\n          extraClassNameProp={' logo__link--light'}\n        />\n      </div>\n\n      <div className=\"copyright\">\n        <p>© 2019 What to watch Ltd.</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n","import {AppRoute} from '../../const';\nimport React from 'react';\nimport {useHistory} from 'react-router-dom';\n\ntype PlayerButtonProps = {\n  id: string;\n}\n\nfunction PlayerButton({id}: PlayerButtonProps): JSX.Element {\n  const history = useHistory();\n\n  return (\n    <button\n      className=\"btn btn--play film-card__button\"\n      type=\"button\"\n      onClick={() => history.push(`${AppRoute.Player}${id}`)}\n    >\n      <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n        <use xlinkHref=\"#play-s\"></use>\n      </svg>\n      <span>Play</span>\n    </button>\n  );\n}\n\nexport default PlayerButton;\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {favoriteAction} from '../../store/api-actions';\nimport {Film} from '../../types/film';\n\ntype MyListButtonProps = {\n  film: Film;\n}\n\nfunction MyListButton({film}: MyListButtonProps): JSX.Element {\n  const dispatch = useDispatch();\n\n  const onClick = () => {\n    dispatch(favoriteAction({filmId: film.id, status: !film.isFavorite}));\n  };\n\n  if (film.isFavorite) {\n    return (\n      <button\n        className=\"btn btn--list film-card__button\"\n        type=\"button\"\n        onClick = {() => onClick()}\n      >\n        <svg viewBox=\"0 0 18 14\" width=\"18\" height=\"14\">\n          <use xlinkHref=\"#in-list\"></use>\n        </svg>\n        <span>My list</span>\n      </button>\n    );\n  }\n  return (\n    <button\n      className=\"btn btn--list film-card__button\"\n      type=\"button\"\n      onClick = {() => onClick()}\n    >\n      <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n        <use xlinkHref=\"#add\"></use>\n      </svg>\n      <span>My list</span>\n    </button>\n  );\n}\n\nexport default MyListButton;\n","import {useDispatch, useSelector} from 'react-redux';\nimport Logo from '../logo/logo';\nimport UserBlock from '../user-block/user-block';\nimport GenreList from '../genre-list/genre-list';\nimport FilmList from '../film-list/film-list';\nimport ShowMore from '../show-more/show-more';\nimport Footer from '../footer/footer';\nimport {Film} from '../../types/film';\nimport {ALL_GENRES} from '../../const';\nimport React, {useEffect} from 'react';\nimport {getCurrentGenre, getFilmNumberLimit} from '../../store/catalog-process/selectors';\nimport {getFilms, getPromoFilm} from '../../store/films-data/selectors';\nimport PlayerButton from '../player-button/player-button';\nimport MyListButton from '../my-list-button/my-list-button';\nimport {\n  changeGenre,\n  loadPromoFilm,\n  resetFavoriteFilms,\n  resetFilmNumberLimit} from '../../store/action';\nimport {getFavoriteFilms} from '../../store/user-process/selectors';\n\nfunction getFilmsByGenre(genre: string, films: Film[]) {\n  if (genre === ALL_GENRES) {\n    return films;\n  }\n  return films.filter((film) => film.genre === genre);\n}\n\nfunction WelcomeScreen(): JSX.Element {\n  const promoFilm = useSelector(getPromoFilm);\n  const currentGenre = useSelector(getCurrentGenre);\n  const films = useSelector(getFilms);\n  const filmNumberLimit = useSelector(getFilmNumberLimit);\n  const favoriteFilms = useSelector(getFavoriteFilms);\n\n  const dispatch = useDispatch();\n\n  const {id, name, genre, released, posterImage, backgroundImage} = promoFilm;\n\n  const filmsByGenre = getFilmsByGenre(currentGenre, films);\n\n  useEffect(() => {\n    dispatch(changeGenre(ALL_GENRES));\n    dispatch(resetFilmNumberLimit());\n    dispatch(resetFavoriteFilms);\n    const matchedPromoFilm = favoriteFilms.find((film: Film) => film.id === promoFilm.id);\n    if (matchedPromoFilm) {\n      dispatch(loadPromoFilm(matchedPromoFilm));\n    }\n  }, [dispatch, favoriteFilms, promoFilm]);\n\n  return (\n    <>\n      <section className=\"film-card\">\n        <div className=\"film-card__bg\">\n          <img src={backgroundImage} alt={name}/>\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header film-card__head\">\n          <div className=\"logo\">\n            <Logo />\n          </div>\n\n          <UserBlock />\n        </header>\n\n        <div className=\"film-card__wrap\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster\">\n              <img src={posterImage} alt={`${name} poster`} width=\"218\" height=\"327\"/>\n            </div>\n\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{genre}</span>\n                <span className=\"film-card__year\">{released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n\n                <PlayerButton\n                  id={String(id)}\n                />\n\n                <MyListButton film={promoFilm}/>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <div className=\"page-content\">\n        <section className=\"catalog\">\n          <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n\n          <GenreList />\n\n          <FilmList\n            filmsCount={filmsByGenre.length > filmNumberLimit ? filmNumberLimit : filmsByGenre.length}\n            films={filmsByGenre}\n          />\n\n          {filmsByGenre.length > filmNumberLimit ? <ShowMore /> : ''}\n\n        </section>\n\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default WelcomeScreen;\n","import {useRef, FormEvent} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {loginAction} from '../../store/api-actions';\nimport {AuthData} from '../../types/auth-data';\nimport Logo from '../logo/logo';\nimport Footer from '../footer/footer';\n\nfunction SignIn() : JSX.Element {\n  const dispatch = useDispatch();\n\n  const onSubmit = (authData: AuthData) => {\n    dispatch(loginAction(authData));\n  };\n\n  const loginRef = useRef<HTMLInputElement | null>(null);\n  const passwordRef = useRef<HTMLInputElement | null>(null);\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    if (loginRef.current !== null && passwordRef.current !== null) {\n      onSubmit({\n        login: loginRef.current.value,\n        password: passwordRef.current.value,\n      });\n    }\n  };\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <div className=\"logo\">\n          <Logo />\n        </div>\n\n        <h1 className=\"page-title user-page__title\">Sign in</h1>\n      </header>\n\n      <div className=\"sign-in user-page__content\">\n        <form\n          className=\"sign-in__form\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"sign-in__fields\">\n            <div className=\"sign-in__field\">\n              <input\n                className=\"sign-in__input\"\n                type=\"email\"\n                placeholder=\"Email address\"\n                name=\"user-email\"\n                id=\"user-email\"\n                ref={loginRef}\n              />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-email\">Email address</label>\n            </div>\n            <div className=\"sign-in__field\">\n              <input\n                className=\"sign-in__input\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"user-password\"\n                id=\"user-password\"\n                ref={passwordRef}\n              />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-password\">Password</label>\n            </div>\n          </div>\n          <div className=\"sign-in__submit\">\n            <button\n              className=\"sign-in__btn\"\n              type=\"submit\"\n            >\n              Sign in\n            </button>\n          </div>\n        </form>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default SignIn;\n","import Logo from '../logo/logo';\nimport FilmList from '../film-list/film-list';\nimport Footer from '../footer/footer';\nimport UserBlock from '../user-block/user-block';\nimport {useEffect} from 'react';\nimport {store} from '../../index';\nimport {fetchFavoriteFilms} from '../../store/api-actions';\nimport {useSelector} from 'react-redux';\nimport {getFavoriteFilms} from '../../store/user-process/selectors';\n\nfunction MyList() : JSX.Element {\n  useEffect(() => {\n    store.dispatch(fetchFavoriteFilms());\n  }, []);\n\n  const favoriteFilms = useSelector(getFavoriteFilms);\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <div className=\"logo\">\n          <Logo />\n        </div>\n\n        <h1 className=\"page-title user-page__title\">My list</h1>\n\n        <UserBlock />\n      </header>\n\n      <section className=\"catalog\">\n        <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n        <FilmList\n          filmsCount={favoriteFilms.length}\n          films={favoriteFilms}\n        />\n      </section>\n\n      <Footer/>\n    </div>\n  );\n}\n\nexport default MyList;\n","import {monthNames} from './const';\n\nexport function formatDate(dateISO: string): string {\n  const date = new Date(dateISO);\n\n  const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\n  const month = date.getMonth() < 10 ? `0${date.getMonth()+1}` : date.getMonth();\n\n  return `${date.getFullYear()}-${month}-${day}`;\n}\n\nexport function humanizeDate(dateISO: string): string {\n  const date = new Date(dateISO);\n  return `${monthNames[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\n}\n\n\n","import {Film} from '../../types/film';\n\ntype ReviewProps = {\n  film: Film;\n  author: string;\n  dateTime: string;\n  dateText: string;\n  quote: string;\n  rating: number;\n}\n\nfunction Review({film, author, dateTime, dateText, quote, rating} : ReviewProps) : JSX.Element {\n  const {id} = film;\n\n  return (\n    <div className=\"review\" defaultValue={id}>\n      <blockquote className=\"review__quote\">\n        <p className=\"review__text\">{quote}\n        </p>\n\n        <footer className=\"review__details\">\n          <cite className=\"review__author\">{author}</cite>\n          <time className=\"review__date\" dateTime={dateTime}>{dateText}</time>\n        </footer>\n      </blockquote>\n\n      <div className=\"review__rating\">{rating}</div>\n    </div>\n  );\n}\n\nexport default Review;\n","import React from 'react';\nimport {Film} from '../../types/film';\nimport {\n  ACTIVE_TAB_CLASS_NAME,\n  RatingLevel,\n  RatingLevelGrades,\n  TabType} from '../../const';\nimport {formatDate, humanizeDate} from '../../util';\nimport Review from '../review/review';\nimport {FilmReview} from '../../types/film-review';\n\ntype TabsProps = {\n  film: Film;\n  comments: FilmReview[];\n  tab: string;\n  onClick: (tab: string) => void;\n}\n\nfunction Tabs(props: TabsProps): JSX.Element {\n  const {film, comments, tab, onClick} = props;\n  const {\n    genre,\n    released,\n    rating,\n    scoresCount,\n    description,\n    director,\n    starring,\n    runTime} = film;\n\n  function getRatingLevel(filmRating: number) {\n    switch (true) {\n      case filmRating >= RatingLevelGrades.Bad && filmRating < RatingLevelGrades.Normal:\n        return RatingLevel.Bad;\n      case filmRating >= RatingLevelGrades.Normal && filmRating < RatingLevelGrades.Good:\n        return RatingLevel.Normal;\n      case filmRating >= RatingLevelGrades.Good && filmRating < RatingLevelGrades.VeryGood:\n        return RatingLevel.Good;\n      case filmRating >= RatingLevelGrades.VeryGood && filmRating < RatingLevelGrades.Awesome:\n        return RatingLevel.VeryGood;\n      case filmRating === RatingLevelGrades.Awesome:\n        return RatingLevel.Awesome;\n    }\n  }\n\n  function humanizeRunTime(filmDuration: number): string {\n    const hours = Math.trunc(filmDuration/60) > 0 ? Math.trunc(filmDuration/60) : '';\n    const minutes = filmDuration%60;\n\n    return `${hours}h ${minutes}m`;\n  }\n\n  function getActiveTabContent(tabName: string) {\n    switch (tabName) {\n      case TabType.Overview:\n        return (\n          <>\n            <div className=\"film-rating\">\n              <div className=\"film-rating__score\">{rating}</div>\n              <p className=\"film-rating__meta\">\n                <span className=\"film-rating__level\">{getRatingLevel(rating)}</span>\n                <span className=\"film-rating__count\">{`${scoresCount} ratings`}</span>\n              </p>\n            </div>\n\n            <div className=\"film-card__text\">\n              <p>{description}</p>\n\n              <p className=\"film-card__director\"><strong>Director: {director}</strong></p>\n\n              <p className=\"film-card__starring\">\n                <strong>Starring: {starring.join(', ')} and other\n                </strong>\n              </p>\n            </div>\n          </>\n        );\n      case TabType.Details:\n        return (\n          <div className=\"film-card__text film-card__row\">\n            <div className=\"film-card__text-col\">\n              <p className=\"film-card__details-item\">\n                <strong className=\"film-card__details-name\">Director</strong>\n                <span className=\"film-card__details-value\">{director}</span>\n              </p>\n              <p className=\"film-card__details-item\">\n                <strong className=\"film-card__details-name\">Starring</strong>\n                <span className=\"film-card__details-value\" style={{whiteSpace: 'pre-line'}}>\n                  {starring.join(', \\n')}\n                </span>\n              </p>\n            </div>\n\n            <div className=\"film-card__text-col\">\n              <p className=\"film-card__details-item\">\n                <strong className=\"film-card__details-name\">Run Time</strong>\n                <span className=\"film-card__details-value\">{humanizeRunTime(runTime)}</span>\n              </p>\n              <p className=\"film-card__details-item\">\n                <strong className=\"film-card__details-name\">Genre</strong>\n                <span className=\"film-card__details-value\">{genre}</span>\n              </p>\n              <p className=\"film-card__details-item\">\n                <strong className=\"film-card__details-name\">Released</strong>\n                <span className=\"film-card__details-value\">{released}</span>\n              </p>\n            </div>\n          </div>\n        );\n      case TabType.Reviews:\n        return (\n          <div className=\"film-card__reviews film-card__row\">\n            <div className=\"film-card__reviews-col\">\n              {comments !== null ? comments.map((review) => (\n                <Review\n                  key = {review.id}\n                  film={film}\n                  author={review.user.name}\n                  dateTime={formatDate(review.date)}\n                  dateText={humanizeDate(review.date)}\n                  rating={review.rating}\n                  quote={review.comment}\n                />),\n              ) : ''}\n            </div>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"film-card__desc\">\n      <nav className=\"film-nav film-card__nav\">\n        <ul className=\"film-nav__list\">\n          <li\n            className={`film-nav__item ${tab === TabType.Overview ? ACTIVE_TAB_CLASS_NAME : ''}`}\n            key={TabType.Overview}\n          >\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n            <a\n              className=\"film-nav__link\"\n              onClick={() => onClick(TabType.Overview)}\n            >\n              Overview\n            </a>\n          </li>\n          <li\n            className={`film-nav__item ${tab === TabType.Details ? ACTIVE_TAB_CLASS_NAME : ''}`}\n            key={TabType.Details}\n          >\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n            <a\n              className=\"film-nav__link\"\n              onClick={() => onClick(TabType.Details)}\n            >\n              Details\n            </a>\n          </li>\n          <li\n            className={`film-nav__item ${tab === TabType.Reviews ? ACTIVE_TAB_CLASS_NAME : ''}`}\n            key={TabType.Reviews}\n          >\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n            <a\n              className=\"film-nav__link\"\n              onClick={() => onClick(TabType.Reviews)}\n            >\n              Reviews\n            </a>\n          </li>\n        </ul>\n      </nav>\n\n      {getActiveTabContent(tab)}\n    </div>\n  );\n}\n\nexport default React.memo(Tabs);\n","import {AppRoute} from '../../const';\nimport {Link, useParams} from 'react-router-dom';\nimport React from 'react';\n\ntype FilmParam = {\n  id: string;\n}\n\nfunction AddReviewButton(): JSX.Element {\n  const {id} = useParams<FilmParam>();\n\n  return (\n    <Link\n      className=\"btn film-card__button\"\n      to={`${AppRoute.Film}${id}${AppRoute.AddReview}`}\n    >\n      Add review\n    </Link>\n  );\n}\n\nexport default React.memo(AddReviewButton);\n","import {useParams} from 'react-router-dom';\nimport Logo from '../logo/logo';\nimport Footer from '../footer/footer';\nimport Tabs from '../tabs/tabs';\nimport FilmList from '../film-list/film-list';\nimport {AuthorizationStatus, SIMILAR_FILM_NUMBER, TabType} from '../../const';\nimport {useSelector} from 'react-redux';\nimport UserBlock from '../user-block/user-block';\nimport {fetchCommentsAction, fetchFilmInfoAction, fetchSimilarFilmsAction} from '../../store/api-actions';\nimport {store} from '../../index';\nimport React, {useEffect} from 'react';\nimport AddReviewButton from '../add-review-button/add-review-button';\nimport {getComments, getCurrentFilm, getSimilarFilms} from '../../store/films-data/selectors';\nimport {getAuthorizationStatus} from '../../store/user-process/selectors';\nimport PlayerButton from '../player-button/player-button';\nimport MyListButton from '../my-list-button/my-list-button';\n\ntype FilmParam = {\n  id: string;\n}\n\nfunction MoviePage() : JSX.Element {\n  const currentFilm = useSelector(getCurrentFilm);\n  const comments = useSelector(getComments);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const similarFilms = useSelector(getSimilarFilms);\n\n  const [activeTab, setActiveTab] = React.useState(TabType.Overview);\n\n  const handleTabClick = React.useCallback(\n    (tab): void => setActiveTab(tab),\n    [],\n  );\n\n  const {id} = useParams<FilmParam>();\n\n  useEffect(() => {\n    store.dispatch(fetchFilmInfoAction(Number(id)));\n    store.dispatch(fetchSimilarFilmsAction(Number(id)));\n    store.dispatch(fetchCommentsAction(Number(id)));\n    setActiveTab(TabType.Overview);\n  }, [id]);\n\n  return (\n    <>\n      <section className=\"film-card film-card--full\" style={{backgroundColor: currentFilm.backgroundColor}}>\n        <div className=\"film-card__hero\">\n          <div className=\"film-card__bg\">\n            <img src={currentFilm.backgroundImage} alt={currentFilm.name}/>\n          </div>\n\n          <h1 className=\"visually-hidden\">WTW</h1>\n\n          <header className=\"page-header film-card__head\">\n            <div className=\"logo\">\n              <Logo />\n            </div>\n\n            <UserBlock />\n          </header>\n\n          <div className=\"film-card__wrap\">\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{currentFilm.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{currentFilm.genre}</span>\n                <span className=\"film-card__year\">{currentFilm.released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n\n                <PlayerButton\n                  id={String(currentFilm.id)}\n                />\n\n                <MyListButton film={currentFilm}/>\n\n                {\n                  authorizationStatus === AuthorizationStatus.Auth ?\n                    <AddReviewButton /> : ''\n                }\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"film-card__wrap film-card__translate-top\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster film-card__poster--big\">\n              <img src={currentFilm.posterImage} alt={`${currentFilm.name} poster`} width=\"218\"\n                height=\"327\"\n              />\n            </div>\n            <Tabs\n              tab={activeTab}\n              film={currentFilm}\n              comments={comments}\n              onClick={handleTabClick}\n            />\n          </div>\n        </div>\n      </section>\n\n      <div className=\"page-content\">\n        <section className=\"catalog catalog--like-this\">\n          <h2 className=\"catalog__title\">More like this</h2>\n\n          <FilmList\n            filmsCount={SIMILAR_FILM_NUMBER}\n            films={similarFilms}\n          />\n        </section>\n\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default MoviePage;\n","import {useState, FormEvent, ChangeEvent} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {ReviewData} from '../../types/review-data';\nimport {reviewAction} from '../../store/api-actions';\nimport {useParams} from 'react-router-dom';\nimport {BACKGROUND_REVIEW_FORM} from '../../const';\n\nconst grades = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\ntype FilmParam = {\n  id: string;\n}\n\nfunction ReviewForm(): JSX.Element {\n  const [userGrades, setUserGrades] = useState(0);\n  const [userComment, setUserComment] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isSending, setIsSending] = useState(false);\n\n  const {id} = useParams<FilmParam>();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (reviewData: ReviewData, errorHandler: (error: string) => void) => {\n    dispatch(reviewAction(reviewData, errorHandler));\n  };\n\n  return (\n    <div className=\"add-review\">\n      <form\n        action=\"#\"\n        className=\"add-review__form\"\n        onSubmit={(evt: FormEvent<HTMLFormElement>) => {\n          evt.preventDefault();\n          setIsSending(true);\n          if (userGrades !== null && userComment !== null) {\n            onSubmit({\n              filmId: Number(id),\n              rating: Number(userGrades),\n              comment: userComment,\n            }, (error: string) => {\n              setIsSending(false);\n              setErrorMessage(error);\n            });\n          }\n        }}\n      >\n        {errorMessage !== '' ? <p style={{color: 'red'}}>{errorMessage}</p> : ''}\n        <fieldset style={{border: 'none', padding: 0}} disabled={isSending}>\n          <div className=\"rating\">\n            <div className=\"rating__stars\">\n              {grades.map((grade) => (\n                <>\n                  <input\n                    key={grade}\n                    className=\"rating__input\"\n                    id={`star-${grade}`}\n                    type=\"radio\"\n                    name=\"rating\"\n                    value={grade}\n                    onChange={() => {\n                      setUserGrades(grade);\n                    }}\n                  />\n                  <label className=\"rating__label\" htmlFor={`star-${grade}`}>Rating {grade}</label>\n                </>),\n              ).reverse()}\n            </div>\n          </div>\n\n          <div\n            className=\"add-review__text\"\n            style={{background: BACKGROUND_REVIEW_FORM}}\n          >\n            <textarea\n              className=\"add-review__textarea\"\n              name=\"review-text\" id=\"review-text\"\n              placeholder=\"Review text\"\n              onChange={({target}: ChangeEvent<HTMLTextAreaElement>) => {\n                setUserComment(target.value);\n              }}\n              value={userComment}\n            />\n            <div className=\"add-review__submit\">\n              <button\n                className=\"add-review__btn\"\n                type=\"submit\"\n                disabled={!(userGrades > 0 && userComment.length >= 50 && userComment.length <= 400)}\n              >\n                Post\n              </button>\n            </div>\n          </div>\n        </fieldset>\n      </form>\n    </div>\n  );\n}\n\nexport default ReviewForm;\n","import {Link, useParams} from 'react-router-dom';\nimport Logo from '../logo/logo';\nimport ReviewForm from '../review-form/review-form';\nimport UserBlock from '../user-block/user-block';\nimport {useSelector} from 'react-redux';\nimport {useEffect} from 'react';\nimport {store} from '../../index';\nimport {ThunkAppDispatch} from '../../types/action';\nimport {fetchFilmInfoAction} from '../../store/api-actions';\nimport {getCurrentFilm} from '../../store/films-data/selectors';\n\ntype FilmParam = {\n  id: string;\n}\n\nfunction AddReview() : JSX.Element {\n  const currentFilm = useSelector(getCurrentFilm);\n\n  const {id} = useParams<FilmParam>();\n\n  const titlePoster = `${currentFilm.name} poster`;\n  const filmPage = `/films/${id}`;\n\n  useEffect(() => {\n    (store.dispatch as ThunkAppDispatch)(fetchFilmInfoAction(Number(id)));\n  }, [id]);\n\n  return (\n    <section className=\"film-card film-card--full\" style={{backgroundColor: currentFilm.backgroundColor}}>\n      <div className=\"film-card__header\">\n        <div className=\"film-card__bg\">\n          <img src={currentFilm.backgroundImage} alt={currentFilm.name}/>\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header\">\n          <div className=\"logo\">\n            <Logo />\n          </div>\n\n          <nav className=\"breadcrumbs\">\n            <ul className=\"breadcrumbs__list\">\n              <li className=\"breadcrumbs__item\">\n                <Link to={filmPage} className=\"breadcrumbs__link\">{currentFilm.name}</Link>\n              </li>\n              <li className=\"breadcrumbs__item\">\n                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                <a className=\"breadcrumbs__link\">Add review</a>\n              </li>\n            </ul>\n          </nav>\n\n          <UserBlock />\n        </header>\n\n        <div className=\"film-card__poster film-card__poster--small\">\n          <img src={currentFilm.posterImage} alt={titlePoster} width=\"218\" height=\"327\"/>\n        </div>\n      </div>\n\n      <ReviewForm />\n\n    </section>\n  );\n}\n\nexport default AddReview;\n","import {useHistory, useParams} from 'react-router-dom';\nimport {\n  SyntheticEvent,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport {store} from '../../index';\nimport {fetchFilmInfoAction} from '../../store/api-actions';\nimport {useSelector} from 'react-redux';\nimport {getCurrentFilm} from '../../store/films-data/selectors';\nimport format from 'format-duration';\n\ntype FilmParam = {\n  id: string;\n}\n\nfunction Player() : JSX.Element {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [timeProgress, setTimeProgress] = useState('');\n\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n\n  const {id} = useParams<FilmParam>();\n\n  const history = useHistory();\n\n  const currentFilm = useSelector(getCurrentFilm);\n  const videoLink = currentFilm.videoLink;\n\n  useEffect(() => {\n    if (videoRef.current !== null) {\n      videoRef.current.onloadstart = () => {\n        if (videoRef.current) {\n          videoRef.current.poster = '';\n          videoRef.current.style.background = 'black url(https://c.tenor.com/FX_9AcYeGokAAAAj/loader-loading.gif) center center no-repeat';\n        }\n      };\n      videoRef.current.oncanplay = () => {\n        if (videoRef.current) {\n          videoRef.current.style.background = '';\n          videoRef.current.poster = 'img/player-poster.jpg';\n        }\n      };\n      videoRef.current.onloadeddata = () => {\n        setIsLoading(false);\n        if (videoRef.current) {\n          setTimeProgress(format(videoRef.current.duration*1000));\n        }\n      };\n    }\n\n    return () => {\n      if (videoRef.current !== null) {\n        videoRef.current.onloadeddata = null;\n        videoRef.current = null;\n      }\n    };\n  }, [id]);\n\n  useEffect(() => {\n    if (videoRef.current === null) {\n      return;\n    }\n\n    if (isPlaying) {\n      videoRef.current.play();\n      return;\n    }\n\n    videoRef.current.pause();\n  }, [isPlaying]);\n\n  useEffect(() => {\n    store.dispatch(fetchFilmInfoAction(Number(id)));\n  }, [id]);\n\n  const handleTimeUpdate = (event: SyntheticEvent<HTMLVideoElement, Event>): void => {\n    if (!videoRef.current) {\n      return;\n    }\n\n    if (isNaN(videoRef.current?.duration)) {\n      return;\n    }\n    setProgress((videoRef.current.currentTime / videoRef.current.duration) * 100);\n    setTimeProgress(format((videoRef.current.duration - videoRef.current.currentTime) * 1000));\n  };\n\n  return (\n    <div className=\"player\">\n      <video\n        src={videoLink}\n        ref={videoRef}\n        className=\"player__video\"\n        poster=\"img/player-poster.jpg\"\n        onTimeUpdate={handleTimeUpdate}\n      />\n\n      <button\n        type=\"button\"\n        className=\"player__exit\"\n        onClick={() => history.goBack()}\n      >\n        Exit\n      </button>\n\n      <div className=\"player__controls\">\n        <div className=\"player__controls-row\">\n          <div className=\"player__time\">\n            <progress\n              className=\"player__progress\"\n              value={progress}\n              max=\"100\"\n            />\n            <div\n              className=\"player__toggler\"\n              style={{left: `${progress}%`}}\n            >\n              Toggler\n            </div>\n          </div>\n          <div className=\"player__time-value\">-{timeProgress}</div>\n        </div>\n\n        <div className=\"player__controls-row\">\n          {isPlaying ?\n            <button\n              type=\"button\"\n              className=\"player__play\"\n              onClick={() => {\n                setIsPlaying(false);\n              }}\n              disabled={isLoading}\n            >\n              <svg viewBox=\"0 0 14 21\" width=\"14\" height=\"21\">\n                <use xlinkHref=\"#pause\"></use>\n              </svg>\n              <span>Pause</span>\n            </button> :\n            <button\n              type=\"button\"\n              className=\"player__play\"\n              onClick={() => {\n                setIsPlaying(true);\n              }}\n            >\n              <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                <use xlinkHref=\"#play-s\"></use>\n              </svg>\n              <span>Play</span>\n            </button>}\n          <div className=\"player__name\">Transpotting</div>\n\n          <button\n            type=\"button\"\n            className=\"player__full-screen\"\n            onClick={() => {videoRef.current?.requestFullscreen();}}\n          >\n            <svg viewBox=\"0 0 27 27\" width=\"27\" height=\"27\">\n              <use xlinkHref=\"#full-screen\"></use>\n            </svg>\n            <span>Full screen</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;\n","import {Link} from 'react-router-dom';\nimport Logo from '../logo/logo';\nimport Footer from '../footer/footer';\n\nfunction Page404() : JSX.Element {\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <div className=\"logo\">\n          <Logo />\n        </div>\n      </header>\n\n      <div className=\"page-not-found\">\n        <h1 className=\"page-not-found__title\">404</h1>\n        <p className=\"page-not-found__text\">Oops! The page you were looking for was not found. </p>\n        <Link className=\"page-not-found__link\" to=\"/\">Back to home</Link>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Page404;\n","import {Route, Redirect} from 'react-router-dom';\nimport {RouteProps} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport {History} from 'history';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {getAuthorizationStatus} from '../../store/user-process/selectors';\n\ntype RenderFuncProps = {\n  history: History<unknown>;\n}\n\ntype PrivateRouteProps = RouteProps & {\n  render: (props: RenderFuncProps) => JSX.Element;\n}\n\nfunction PrivateRoute(props: PrivateRouteProps): JSX.Element {\n  const {exact, path, render} = props;\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={(routeProps) => (\n        authorizationStatus === AuthorizationStatus.Auth\n          ? render(routeProps)\n          : <Redirect to={AppRoute.Login} />\n      )}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import {Route, Redirect} from 'react-router-dom';\nimport {RouteProps} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport {History} from 'history';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {getAuthorizationStatus} from '../../store/user-process/selectors';\n\ntype RenderFuncProps = {\n  history: History<unknown>;\n}\n\ntype PrivateRouteProps = RouteProps & {\n  render: (props: RenderFuncProps) => JSX.Element;\n}\n\nfunction LoginRoute(props: PrivateRouteProps): JSX.Element {\n  const {exact, path, render} = props;\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={(routeProps) => {\n        if (authorizationStatus === AuthorizationStatus.Auth && path === AppRoute.Login) {\n          return <Redirect to={AppRoute.Root} />;\n        }\n        return render(routeProps);\n      }}\n    />\n  );\n}\n\nexport default LoginRoute;\n","import {useSelector} from 'react-redux';\nimport {Route, Router as BrowserRouter, Switch} from 'react-router-dom';\nimport {AppRoute} from '../../const';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport WelcomeScreen from '../welcome-screen/welcome-screen';\nimport SignIn from '../sign-in/sign-in';\nimport MyList from '../my-list/my-list';\nimport MoviePage from '../movie-page/movie-page';\nimport AddReview from '../add-review/add-review';\nimport Player from '../player/player';\nimport Page404 from '../page-404/page-404';\nimport PrivateRoute from '../private-route/private-route';\nimport browserHistory from '../../browser-history';\nimport {getDataLoadedStatus} from '../../store/user-process/selectors';\nimport LoginRoute from '../login-route/login-route';\n\nfunction App(): JSX.Element {\n  const isDataLoaded = useSelector(getDataLoadedStatus);\n\n  if (!isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <BrowserRouter history={browserHistory}>\n      <Switch>\n        <Route exact path={AppRoute.Root}>\n          <WelcomeScreen />\n        </Route>\n        <Route exact path='/review'>\n          <AddReview />\n        </Route>\n        <LoginRoute\n          exact\n          path={AppRoute.Login}\n          render={({history}) => <SignIn />}\n        >\n        </LoginRoute>\n        <PrivateRoute\n          exact\n          path={AppRoute.MyList}\n          render={({history}) => <MyList />}\n        >\n        </PrivateRoute>\n        <PrivateRoute\n          exact\n          path={`${AppRoute.Film}:id${AppRoute.AddReview}`}\n          render={() => <AddReview />}\n        >\n        </PrivateRoute>\n        <Route exact path={`${AppRoute.Film}:id`}>\n          <MoviePage />\n        </Route>\n        <Route exact path={`${AppRoute.Player}:id`}>\n          <Player />\n        </Route>\n        <Route >\n          <Page404 />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n","import browserHistory from '../../browser-history';\nimport {Middleware} from 'redux';\nimport {State} from '../../types/state';\nimport {ActionType} from '../../types/action';\n\nexport const redirect: Middleware<unknown, State> =\n  (_store) =>\n    (next) =>\n      (action) => {\n\n        if (action.type === ActionType.RedirectToRoute) {\n          browserHistory.push(action.payload);\n        }\n\n        return next(action);\n      };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {configureStore} from '@reduxjs/toolkit';\nimport {Provider} from 'react-redux';\nimport App from './components/app/app';\nimport {createAPI} from './services/api';\nimport {requireAuthorization} from './store/action';\nimport {fetchFilmAction, checkAuthAction, fetchPromoFilmAction} from './store/api-actions';\nimport {AuthorizationStatus} from './const';\nimport {redirect} from './store/middlewares/redirect';\nimport {rootReducer} from './store/root-reducer';\n\nconst api = createAPI(\n  () => store.dispatch(requireAuthorization(AuthorizationStatus.NoAuth)),\n);\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\nstore.dispatch(checkAuthAction());\nstore.dispatch(fetchFilmAction());\nstore.dispatch(fetchPromoFilmAction());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n"],"sourceRoot":""}